name: RPG

env:
    EXECUTABLES: "my_rpg"

on:
    push:
        branches-ignore: ["ga-ignore-*"]
    pull_request:
        branches-ignore: ["ga-ignore-*"]

jobs:
    check_coding_style:
        name: check_coding_style
        runs-on: ubuntu-latest
        container:
          image: ghcr.io/epitech/coding-style-checker:latest
        steps:
          - name: checkout_repository
            uses: actions/checkout@v3
            with:
              fetch-depth: 0
          - name: run_checker
            run: check.sh $(pwd) $(pwd)
          - name: display_coding_style_errors
            run: |
              if [ -s coding-style-reports.log ]; then
                cat coding-style-reports.log | while read line; do
                  echo "::error file=${line%%:*}::${line#*: }"
                done
                exit 1
              fi
    check_program_compilation:
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker
        steps:
            - uses: actions/checkout@v4
            - name: compile project
              timeout-minutes: 2
              run:  make
            
            - name: clean repo
              run: make clean

            - name: executable here
              run: |
                IFS=',' read -r -a executables <<< ${{ env.EXECUTABLES }}
                for exe in "${executables[@]}"; do
                    if [ -x "./$exe" ]; then
                        echo "$exe is present."
                    else
                        echo "$exe is not present."
                        exit 1
                    fi
                done

    run_tests:
        needs: check_program_compilation
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker
        steps:
            - uses: actions/checkout@v4
            - name: run tests
              run:  make tests_run
              

